class Solution {
    public String solveEquation(String equation) {
        String[] parts = equation.split("=");
        String left = parts[0];
        String right = parts[1];

        int[] leftResult = parse(left);
        int leftXCoeff = leftResult[0];
        int leftConstant = leftResult[1];

        int[] rightResult = parse(right);
        int rightXCoeff = rightResult[0];
        int rightConstant = rightResult[1];

    }

    private int[] parse(String expression) {
        int xCoeff = 0;
        int constant = 0;

        for (int i = 0; i < expression.length(); i++) {
            if (expression.charAt(i) == 'x') {
                if (i == 0) {
                    xCoeff++;
                } else if (expression.charAt(i - 1) == '+') {
                    xCoeff++;
                } else if (expression.charAt(i - 1) == '-') {
                    xCoeff--;
                } else if (Character.isDigit(expression.charAt(i - 1))) {
                    if (i == 1) {
                        xCoeff += expression.charAt(i - 1) - '0';
                    } else if (expression.charAt(i - 2) == '+') {
                        xCoeff += expression.charAt(i - 1) - '0';
                    } else {
                        xCoeff -= expression.charAt(i - 1) - '0';
                    }
                }
            }
        }

        for (int j = 0; j < expression.length(); j++) {
            if (Character.isDigit(expression.charAt(j))) {
    if (j + 1 < expression.length() && expression.charAt(j + 1) == 'x') {
        continue;
    }

    if (j == 0) {
        constant += expression.charAt(j) - '0';
    } else if (expression.charAt(j - 1) == '+') {
        constant += expression.charAt(j) - '0';
    } else if (expression.charAt(j - 1) == '-') {
        constant -= expression.charAt(j) - '0';
    } else {
        constant += expression.charAt(j) - '0';
    }
}
        return new int[] {xCoeff, constant};   
    }
}
