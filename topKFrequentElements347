class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        Arrays.sort(nums);

        HashMap<Integer, List<Integer>> freqNums = new HashMap<>();

        for (int i = 0; i < nums.length; i++) {
            if (!freqNums.containsKey(nums[i])) {
                freqNums.put(nums[i], new ArrayList<>());
            }
            freqNums.get(nums[i]).add(nums[i]);
        }

        int[] answer = new int[k];
        List<Integer> keys = new ArrayList<>(freqNums.keySet());

        int maxNum = 0; // times
        int keyFreq = -1; // acc key
        int key = 0;
        int count = 0;

        for (int i = 0; i < k; i++) {
            for (int j = 0; j < keys.size(); j++) {
                key = keys.get(j);
                count = freqNums.get(key).size();

                if (count > maxNum) {
                    maxNum = count;
                    keyFreq = key;
                }
            }
            answer[i] = keyFreq;
            freqNums.remove(keyFreq);
            keys.remove(Integer.valueOf(keyFreq));
            count = 0;
            maxNum = 0;
        }

        return answer;

    }
}
